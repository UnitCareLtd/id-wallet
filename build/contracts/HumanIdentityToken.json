{
  "contractName": "HumanIdentityToken",
  "abi": [
    {
      "constant": false,
      "inputs": [
        {
          "name": "_spender",
          "type": "address"
        },
        {
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "verifications",
      "outputs": [
        {
          "name": "oracleNonce",
          "type": "string"
        },
        {
          "name": "confidenceResult",
          "type": "uint256"
        },
        {
          "name": "user",
          "type": "address"
        },
        {
          "name": "threshold",
          "type": "uint256"
        },
        {
          "name": "timestamp",
          "type": "uint256"
        },
        {
          "name": "identityProvider",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_from",
          "type": "address"
        },
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "name": "verificationCounts",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "confidenceThreshold",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "oracleNonce",
          "type": "string"
        },
        {
          "name": "confidenceResult",
          "type": "uint256"
        },
        {
          "name": "user",
          "type": "address"
        },
        {
          "name": "r",
          "type": "bytes32"
        },
        {
          "name": "s",
          "type": "bytes32"
        },
        {
          "name": "v",
          "type": "uint8"
        }
      ],
      "name": "verify",
      "outputs": [
        {
          "name": "success",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "newThreshold",
          "type": "uint256"
        }
      ],
      "name": "updateConfidenceThreshold",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_spender",
          "type": "address"
        },
        {
          "name": "_subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseApproval",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "name": "balance",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "name": "registrations",
      "outputs": [
        {
          "name": "timestamp",
          "type": "uint256"
        },
        {
          "name": "identityProvider",
          "type": "address"
        },
        {
          "name": "oracleNonce",
          "type": "string"
        },
        {
          "name": "registered",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "oracleNonce",
          "type": "string"
        },
        {
          "name": "confidenceResult",
          "type": "uint256"
        },
        {
          "name": "user",
          "type": "address"
        },
        {
          "name": "r",
          "type": "bytes32"
        },
        {
          "name": "s",
          "type": "bytes32"
        },
        {
          "name": "v",
          "type": "uint8"
        }
      ],
      "name": "register",
      "outputs": [
        {
          "name": "success",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "newIdentityProvider",
          "type": "address"
        }
      ],
      "name": "updateIdentityProvider",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "identityProvider",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_spender",
          "type": "address"
        },
        {
          "name": "_addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseApproval",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "verificationAttempts",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_owner",
          "type": "address"
        },
        {
          "name": "_spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "oracleNonce",
          "type": "string"
        },
        {
          "indexed": false,
          "name": "success",
          "type": "bool"
        }
      ],
      "name": "RegisterUser",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "oracleNonce",
          "type": "string"
        },
        {
          "indexed": false,
          "name": "confidenceResult",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "success",
          "type": "bool"
        }
      ],
      "name": "VerifyUser",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "oldProvider",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "newProvider",
          "type": "address"
        }
      ],
      "name": "IdentityProviderUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "oldThreshold",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "newThreshold",
          "type": "uint256"
        }
      ],
      "name": "ConfidenceThresholdUpdated",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "oracleNonce",
          "type": "string"
        },
        {
          "name": "confidenceResult",
          "type": "uint256"
        },
        {
          "name": "user",
          "type": "address"
        },
        {
          "name": "r",
          "type": "bytes32"
        },
        {
          "name": "s",
          "type": "bytes32"
        },
        {
          "name": "v",
          "type": "uint8"
        },
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "verifyAndTransfer",
      "outputs": [
        {
          "name": "success",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": "0x606060405233600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550612a44806100546000396000f30060606040526004361061011d576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168063095ea7b31461012257806310c74e161461017c57806318160ddd1461029757806323b872dd146102c057806325b4ca6c146103395780632d1e8af61461038657806339c2f6b2146103af5780634988ce7b146104725780635ff162f61461055d578063661884631461058057806370a08231146105da5780638da5cb5b14610627578063942e6bcf1461067c578063a724034514610773578063a9059cbb14610836578063c16a02a914610890578063c573a27a146108c9578063d73dd6231461091e578063d7af401b14610978578063dd62ed3e146109b7578063f2fde38b14610a23575b600080fd5b341561012d57600080fd5b610162600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091908035906020019091905050610a5c565b604051808215151515815260200191505060405180910390f35b341561018757600080fd5b6101a1600480803560001916906020019091905050610b4e565b60405180806020018781526020018673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018581526020018481526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001828103825288818151815260200191508051906020019080838360005b8381101561025757808201518184015260208101905061023c565b50505050905090810190601f1680156102845780820380516001836020036101000a031916815260200191505b5097505050505050505060405180910390f35b34156102a257600080fd5b6102aa610c62565b6040518082815260200191505060405180910390f35b34156102cb57600080fd5b61031f600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803573ffffffffffffffffffffffffffffffffffffffff16906020019091908035906020019091905050610c6c565b604051808215151515815260200191505060405180910390f35b341561034457600080fd5b610370600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190505061102b565b6040518082815260200191505060405180910390f35b341561039157600080fd5b610399611043565b6040518082815260200191505060405180910390f35b34156103ba57600080fd5b610458600480803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509190803590602001909190803573ffffffffffffffffffffffffffffffffffffffff16906020019091908035600019169060200190919080356000191690602001909190803560ff16906020019091905050611049565b604051808215151515815260200191505060405180910390f35b341561047d57600080fd5b610543600480803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509190803590602001909190803573ffffffffffffffffffffffffffffffffffffffff16906020019091908035600019169060200190919080356000191690602001909190803560ff1690602001909190803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803590602001909190505061156d565b604051808215151515815260200191505060405180910390f35b341561056857600080fd5b61057e600480803590602001909190505061159e565b005b341561058b57600080fd5b6105c0600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091908035906020019091905050611655565b604051808215151515815260200191505060405180910390f35b34156105e557600080fd5b610611600480803573ffffffffffffffffffffffffffffffffffffffff169060200190919050506118e6565b6040518082815260200191505060405180910390f35b341561063257600080fd5b61063a61192f565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b341561068757600080fd5b6106b3600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050611955565b604051808581526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018060200183151515158152602001828103825284818151815260200191508051906020019080838360005b8381101561073557808201518184015260208101905061071a565b50505050905090810190601f1680156107625780820380516001836020036101000a031916815260200191505b509550505050505060405180910390f35b341561077e57600080fd5b61081c600480803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509190803590602001909190803573ffffffffffffffffffffffffffffffffffffffff16906020019091908035600019169060200190919080356000191690602001909190803560ff16906020019091905050611a4a565b604051808215151515815260200191505060405180910390f35b341561084157600080fd5b610876600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091908035906020019091905050611f4e565b604051808215151515815260200191505060405180910390f35b341561089b57600080fd5b6108c7600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050612172565b005b34156108d457600080fd5b6108dc612305565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b341561092957600080fd5b61095e600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803590602001909190505061232a565b604051808215151515815260200191505060405180910390f35b341561098357600080fd5b61099d600480803560001916906020019091905050612526565b604051808215151515815260200191505060405180910390f35b34156109c257600080fd5b610a0d600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050612546565b6040518082815260200191505060405180910390f35b3415610a2e57600080fd5b610a5a600480803573ffffffffffffffffffffffffffffffffffffffff169060200190919050506125cd565b005b600081600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040518082815260200191505060405180910390a36001905092915050565b6003602052806000526040600020600091509050806000018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610bfa5780601f10610bcf57610100808354040283529160200191610bfa565b820191906000526020600020905b815481529060010190602001808311610bdd57829003601f168201915b5050505050908060010154908060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060030154908060040154908060050160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905086565b6000600854905090565b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614151515610ca957600080fd5b600760008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548211151515610cf757600080fd5b600960008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548211151515610d8257600080fd5b610dd482600760008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461272590919063ffffffff16565b600760008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610e6982600760008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461273e90919063ffffffff16565b600760008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610f3b82600960008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461272590919063ffffffff16565b600960008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040518082815260200191505060405180910390a3600190509392505050565b60046020528060005260406000206000915090505481565b60015481565b6000806110546128af565b60008989896040518084805190602001908083835b60208310151561108e5780518252602082019150602081019050602083039250611069565b6001836020036101000a0380198251168184511680821785525050505050509050018381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166c01000000000000000000000000028152601401935050505060405180910390209250600183868989604051600081526020016040526040518085600019166000191681526020018460ff1660ff1681526020018360001916600019168152602001826000191660001916815260200194505050505060206040516020810390808403906000865af1151561117757600080fd5b50506020604051035173ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415156111da57600080fd5b60011515600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060030160009054906101000a900460ff16151514151561123c57600080fd5b6000151560056000856000191660001916815260200190815260200160002060009054906101000a900460ff16151514151561127757600080fd5b6112828a8a8a61275c565b91506112d76001600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461273e90919063ffffffff16565b905081600360003384604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166c01000000000000000000000000028152601401828152602001925050506040518091039020600019166000191681526020019081526020016000206000820151816000019080519060200190611369929190612918565b506020820151816001015560408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550606082015181600301556080820151816004015560a08201518160050160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555090505080600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600160056000856000191660001916815260200190815260200160002060006101000a81548160ff02191690831515021790555060015489101593503373ffffffffffffffffffffffffffffffffffffffff167f1ae18363def3ec2435717d7f034c6118d1caae2f6cfa260085d2593b8cd03d118b8b87604051808060200184815260200183151515158152602001828103825285818151815260200191508051906020019080838360005b83811015611524578082015181840152602081019050611509565b50505050905090810190601f1680156115515780820380516001836020036101000a031916815260200191505b5094505050505060405180910390a25050509695505050505050565b600061157d898989898989611049565b905080156115925761158f8383611f4e565b90505b98975050505050505050565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156115fa57600080fd5b6000811415151561160a57600080fd5b806001819055507f261c83c5299712f179f7e7ecfa195d1e1cc9d3216838a97516668b1d088156f760015482604051808381526020018281526020019250505060405180910390a150565b600080600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905080831115611766576000600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506117fa565b611779838261272590919063ffffffff16565b600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b8373ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546040518082815260200191505060405180910390a3600191505092915050565b6000600760008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60026020528060005260406000206000915090508060000154908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690806002018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015611a2d5780601f10611a0257610100808354040283529160200191611a2d565b820191906000526020600020905b815481529060010190602001808311611a1057829003601f168201915b5050505050908060030160009054906101000a900460ff16905084565b6000611a54612998565b611a5c612998565b60018989896040518084805190602001908083835b602083101515611a965780518252602082019150602081019050602083039250611a71565b6001836020036101000a0380198251168184511680821785525050505050509050018381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166c0100000000000000000000000002815260140193505050506040518091039020858888604051600081526020016040526040518085600019166000191681526020018460ff1660ff1681526020018360001916600019168152602001826000191660001916815260200194505050505060206040516020810390808403906000865af11515611b7a57600080fd5b50506020604051035173ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141515611bdd57600080fd5b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060806040519081016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600282018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015611d215780601f10611cf657610100808354040283529160200191611d21565b820191906000526020600020905b815481529060010190602001808311611d0457829003601f168201915b505050505081526020016003820160009054906101000a900460ff16151515158152505091506000151582606001511515141515611d5e57600080fd5b611d6789612825565b905080600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506040820151816002019080519060200190611e16929190612918565b5060608201518160030160006101000a81548160ff0219169083151502179055509050506000600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000154141592503373ffffffffffffffffffffffffffffffffffffffff167faa8ca4c67181debf5506765bb8e2408f7c9d49a64e87ea8eb2579b5e1f755d9d8a85604051808060200183151515158152602001828103825284818151815260200191508051906020019080838360005b83811015611f07578082015181840152602081019050611eec565b50505050905090810190601f168015611f345780820380516001836020036101000a031916815260200191505b50935050505060405180910390a250509695505050505050565b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614151515611f8b57600080fd5b600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548211151515611fd957600080fd5b61202b82600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461272590919063ffffffff16565b600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506120c082600760008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461273e90919063ffffffff16565b600760008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040518082815260200191505060405180910390a36001905092915050565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156121ce57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415151561220a57600080fd5b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f319856d273c9bc4c9184c56973901b677b9a7c9fd6cd933b05e5d223ecf5fc816000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1682604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060405180910390a150565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60006123bb82600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461273e90919063ffffffff16565b600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546040518082815260200191505060405180910390a36001905092915050565b60056020528060005260406000206000915054906101000a900460ff1681565b6000600960008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561262957600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415151561266557600080fd5b8073ffffffffffffffffffffffffffffffffffffffff16600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a380600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600082821115151561273357fe5b818303905092915050565b600080828401905083811015151561275257fe5b8091505092915050565b6127646128af565b8381600001819052508281602001818152505081816040019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff1681525050600154816060018181525050428160800181815250506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff168160a0019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250509392505050565b61282d612998565b428160000181815250506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff16816020019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250508181604001819052506001816060019015159081151581525050919050565b60c0604051908101604052806128c36129df565b815260200160008152602001600073ffffffffffffffffffffffffffffffffffffffff1681526020016000815260200160008152602001600073ffffffffffffffffffffffffffffffffffffffff1681525090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061295957805160ff1916838001178555612987565b82800160010185558215612987579182015b8281111561298657825182559160200191906001019061296b565b5b50905061299491906129f3565b5090565b60806040519081016040528060008152602001600073ffffffffffffffffffffffffffffffffffffffff1681526020016129d06129df565b81526020016000151581525090565b602060405190810160405280600081525090565b612a1591905b80821115612a115760008160009055506001016129f9565b5090565b905600a165627a7a723058204cf5eb0d2b92c26aaa835ed270af3377db68f302d021f02c70fc20910868946c0029",
  "deployedBytecode": "0x60606040526004361061011d576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168063095ea7b31461012257806310c74e161461017c57806318160ddd1461029757806323b872dd146102c057806325b4ca6c146103395780632d1e8af61461038657806339c2f6b2146103af5780634988ce7b146104725780635ff162f61461055d578063661884631461058057806370a08231146105da5780638da5cb5b14610627578063942e6bcf1461067c578063a724034514610773578063a9059cbb14610836578063c16a02a914610890578063c573a27a146108c9578063d73dd6231461091e578063d7af401b14610978578063dd62ed3e146109b7578063f2fde38b14610a23575b600080fd5b341561012d57600080fd5b610162600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091908035906020019091905050610a5c565b604051808215151515815260200191505060405180910390f35b341561018757600080fd5b6101a1600480803560001916906020019091905050610b4e565b60405180806020018781526020018673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018581526020018481526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001828103825288818151815260200191508051906020019080838360005b8381101561025757808201518184015260208101905061023c565b50505050905090810190601f1680156102845780820380516001836020036101000a031916815260200191505b5097505050505050505060405180910390f35b34156102a257600080fd5b6102aa610c62565b6040518082815260200191505060405180910390f35b34156102cb57600080fd5b61031f600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803573ffffffffffffffffffffffffffffffffffffffff16906020019091908035906020019091905050610c6c565b604051808215151515815260200191505060405180910390f35b341561034457600080fd5b610370600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190505061102b565b6040518082815260200191505060405180910390f35b341561039157600080fd5b610399611043565b6040518082815260200191505060405180910390f35b34156103ba57600080fd5b610458600480803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509190803590602001909190803573ffffffffffffffffffffffffffffffffffffffff16906020019091908035600019169060200190919080356000191690602001909190803560ff16906020019091905050611049565b604051808215151515815260200191505060405180910390f35b341561047d57600080fd5b610543600480803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509190803590602001909190803573ffffffffffffffffffffffffffffffffffffffff16906020019091908035600019169060200190919080356000191690602001909190803560ff1690602001909190803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803590602001909190505061156d565b604051808215151515815260200191505060405180910390f35b341561056857600080fd5b61057e600480803590602001909190505061159e565b005b341561058b57600080fd5b6105c0600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091908035906020019091905050611655565b604051808215151515815260200191505060405180910390f35b34156105e557600080fd5b610611600480803573ffffffffffffffffffffffffffffffffffffffff169060200190919050506118e6565b6040518082815260200191505060405180910390f35b341561063257600080fd5b61063a61192f565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b341561068757600080fd5b6106b3600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050611955565b604051808581526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018060200183151515158152602001828103825284818151815260200191508051906020019080838360005b8381101561073557808201518184015260208101905061071a565b50505050905090810190601f1680156107625780820380516001836020036101000a031916815260200191505b509550505050505060405180910390f35b341561077e57600080fd5b61081c600480803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509190803590602001909190803573ffffffffffffffffffffffffffffffffffffffff16906020019091908035600019169060200190919080356000191690602001909190803560ff16906020019091905050611a4a565b604051808215151515815260200191505060405180910390f35b341561084157600080fd5b610876600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091908035906020019091905050611f4e565b604051808215151515815260200191505060405180910390f35b341561089b57600080fd5b6108c7600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050612172565b005b34156108d457600080fd5b6108dc612305565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b341561092957600080fd5b61095e600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803590602001909190505061232a565b604051808215151515815260200191505060405180910390f35b341561098357600080fd5b61099d600480803560001916906020019091905050612526565b604051808215151515815260200191505060405180910390f35b34156109c257600080fd5b610a0d600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050612546565b6040518082815260200191505060405180910390f35b3415610a2e57600080fd5b610a5a600480803573ffffffffffffffffffffffffffffffffffffffff169060200190919050506125cd565b005b600081600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040518082815260200191505060405180910390a36001905092915050565b6003602052806000526040600020600091509050806000018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610bfa5780601f10610bcf57610100808354040283529160200191610bfa565b820191906000526020600020905b815481529060010190602001808311610bdd57829003601f168201915b5050505050908060010154908060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060030154908060040154908060050160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905086565b6000600854905090565b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614151515610ca957600080fd5b600760008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548211151515610cf757600080fd5b600960008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548211151515610d8257600080fd5b610dd482600760008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461272590919063ffffffff16565b600760008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610e6982600760008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461273e90919063ffffffff16565b600760008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610f3b82600960008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461272590919063ffffffff16565b600960008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040518082815260200191505060405180910390a3600190509392505050565b60046020528060005260406000206000915090505481565b60015481565b6000806110546128af565b60008989896040518084805190602001908083835b60208310151561108e5780518252602082019150602081019050602083039250611069565b6001836020036101000a0380198251168184511680821785525050505050509050018381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166c01000000000000000000000000028152601401935050505060405180910390209250600183868989604051600081526020016040526040518085600019166000191681526020018460ff1660ff1681526020018360001916600019168152602001826000191660001916815260200194505050505060206040516020810390808403906000865af1151561117757600080fd5b50506020604051035173ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415156111da57600080fd5b60011515600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060030160009054906101000a900460ff16151514151561123c57600080fd5b6000151560056000856000191660001916815260200190815260200160002060009054906101000a900460ff16151514151561127757600080fd5b6112828a8a8a61275c565b91506112d76001600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461273e90919063ffffffff16565b905081600360003384604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166c01000000000000000000000000028152601401828152602001925050506040518091039020600019166000191681526020019081526020016000206000820151816000019080519060200190611369929190612918565b506020820151816001015560408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550606082015181600301556080820151816004015560a08201518160050160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555090505080600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600160056000856000191660001916815260200190815260200160002060006101000a81548160ff02191690831515021790555060015489101593503373ffffffffffffffffffffffffffffffffffffffff167f1ae18363def3ec2435717d7f034c6118d1caae2f6cfa260085d2593b8cd03d118b8b87604051808060200184815260200183151515158152602001828103825285818151815260200191508051906020019080838360005b83811015611524578082015181840152602081019050611509565b50505050905090810190601f1680156115515780820380516001836020036101000a031916815260200191505b5094505050505060405180910390a25050509695505050505050565b600061157d898989898989611049565b905080156115925761158f8383611f4e565b90505b98975050505050505050565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156115fa57600080fd5b6000811415151561160a57600080fd5b806001819055507f261c83c5299712f179f7e7ecfa195d1e1cc9d3216838a97516668b1d088156f760015482604051808381526020018281526020019250505060405180910390a150565b600080600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905080831115611766576000600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506117fa565b611779838261272590919063ffffffff16565b600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b8373ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546040518082815260200191505060405180910390a3600191505092915050565b6000600760008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60026020528060005260406000206000915090508060000154908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690806002018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015611a2d5780601f10611a0257610100808354040283529160200191611a2d565b820191906000526020600020905b815481529060010190602001808311611a1057829003601f168201915b5050505050908060030160009054906101000a900460ff16905084565b6000611a54612998565b611a5c612998565b60018989896040518084805190602001908083835b602083101515611a965780518252602082019150602081019050602083039250611a71565b6001836020036101000a0380198251168184511680821785525050505050509050018381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166c0100000000000000000000000002815260140193505050506040518091039020858888604051600081526020016040526040518085600019166000191681526020018460ff1660ff1681526020018360001916600019168152602001826000191660001916815260200194505050505060206040516020810390808403906000865af11515611b7a57600080fd5b50506020604051035173ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141515611bdd57600080fd5b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060806040519081016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600282018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015611d215780601f10611cf657610100808354040283529160200191611d21565b820191906000526020600020905b815481529060010190602001808311611d0457829003601f168201915b505050505081526020016003820160009054906101000a900460ff16151515158152505091506000151582606001511515141515611d5e57600080fd5b611d6789612825565b905080600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506040820151816002019080519060200190611e16929190612918565b5060608201518160030160006101000a81548160ff0219169083151502179055509050506000600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000154141592503373ffffffffffffffffffffffffffffffffffffffff167faa8ca4c67181debf5506765bb8e2408f7c9d49a64e87ea8eb2579b5e1f755d9d8a85604051808060200183151515158152602001828103825284818151815260200191508051906020019080838360005b83811015611f07578082015181840152602081019050611eec565b50505050905090810190601f168015611f345780820380516001836020036101000a031916815260200191505b50935050505060405180910390a250509695505050505050565b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614151515611f8b57600080fd5b600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548211151515611fd957600080fd5b61202b82600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461272590919063ffffffff16565b600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506120c082600760008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461273e90919063ffffffff16565b600760008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040518082815260200191505060405180910390a36001905092915050565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156121ce57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415151561220a57600080fd5b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f319856d273c9bc4c9184c56973901b677b9a7c9fd6cd933b05e5d223ecf5fc816000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1682604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060405180910390a150565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60006123bb82600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461273e90919063ffffffff16565b600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546040518082815260200191505060405180910390a36001905092915050565b60056020528060005260406000206000915054906101000a900460ff1681565b6000600960008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561262957600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415151561266557600080fd5b8073ffffffffffffffffffffffffffffffffffffffff16600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a380600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600082821115151561273357fe5b818303905092915050565b600080828401905083811015151561275257fe5b8091505092915050565b6127646128af565b8381600001819052508281602001818152505081816040019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff1681525050600154816060018181525050428160800181815250506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff168160a0019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250509392505050565b61282d612998565b428160000181815250506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff16816020019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250508181604001819052506001816060019015159081151581525050919050565b60c0604051908101604052806128c36129df565b815260200160008152602001600073ffffffffffffffffffffffffffffffffffffffff1681526020016000815260200160008152602001600073ffffffffffffffffffffffffffffffffffffffff1681525090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061295957805160ff1916838001178555612987565b82800160010185558215612987579182015b8281111561298657825182559160200191906001019061296b565b5b50905061299491906129f3565b5090565b60806040519081016040528060008152602001600073ffffffffffffffffffffffffffffffffffffffff1681526020016129d06129df565b81526020016000151581525090565b602060405190810160405280600081525090565b612a1591905b80821115612a115760008160009055506001016129f9565b5090565b905600a165627a7a723058204cf5eb0d2b92c26aaa835ed270af3377db68f302d021f02c70fc20910868946c0029",
  "sourceMap": "340:1207:2:-;;;509:10:4;501:5;;:18;;;;;;;;;;;;;;;;;;340:1207:2;;;;;;",
  "deployedSourceMap": "340:1207:2:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1804:188:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3183:53:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;3183:53:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;362:83:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;737:444:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3375:50:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2979:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2629:867:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1194:351:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4073:237:0;;;;;;;;;;;;;;;;;;;;;;;;;;3618:403:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1122:107:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;238:20:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3056:53:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;3056:53:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1024:643:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;599:321:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3654:265:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;2840:31:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2894:262:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3540:52:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2311:126:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;832:174:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;1804:188:8;1871:4;1915:6;1883:7;:19;1891:10;1883:19;;;;;;;;;;;;;;;:29;1903:8;1883:29;;;;;;;;;;;;;;;:38;;;;1953:8;1932:38;;1941:10;1932:38;;;1963:6;1932:38;;;;;;;;;;;;;;;;;;1983:4;1976:11;;1804:188;;;;:::o;3183:53:1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;362:83:5:-;406:7;428:12;;421:19;;362:83;:::o;737:444:8:-;819:4;854:1;839:17;;:3;:17;;;;831:26;;;;;;;;881:8;:15;890:5;881:15;;;;;;;;;;;;;;;;871:6;:25;;863:34;;;;;;;;921:7;:14;929:5;921:14;;;;;;;;;;;;;;;:26;936:10;921:26;;;;;;;;;;;;;;;;911:6;:36;;903:45;;;;;;;;973:27;993:6;973:8;:15;982:5;973:15;;;;;;;;;;;;;;;;:19;;:27;;;;:::i;:::-;955:8;:15;964:5;955:15;;;;;;;;;;;;;;;:45;;;;1022:25;1040:6;1022:8;:13;1031:3;1022:13;;;;;;;;;;;;;;;;:17;;:25;;;;:::i;:::-;1006:8;:13;1015:3;1006:13;;;;;;;;;;;;;;;:41;;;;1082:38;1113:6;1082:7;:14;1090:5;1082:14;;;;;;;;;;;;;;;:26;1097:10;1082:26;;;;;;;;;;;;;;;;:30;;:38;;;;:::i;:::-;1053:7;:14;1061:5;1053:14;;;;;;;;;;;;;;;:26;1068:10;1053:26;;;;;;;;;;;;;;;:67;;;;1147:3;1131:28;;1140:5;1131:28;;;1152:6;1131:28;;;;;;;;;;;;;;;;;;1172:4;1165:11;;737:444;;;;;:::o;3375:50:1:-;;;;;;;;;;;;;;;;;:::o;2979:31::-;;;;:::o;2629:867:0:-;2781:12;2803:16;3052:32;;:::i;:::-;3151:13;2832:11;2845:16;2863:4;2822:46;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;51:19;36:153;;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;2822:46:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2803:65;;2903:28;2913:8;2923:1;2926;2929;2903:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2883:48;;:16;;;;;;;;;;;:48;;;2875:57;;;;;;;;2986:4;2946:44;;:13;:25;2960:10;2946:25;;;;;;;;;;;;;;;:36;;;;;;;;;;;;:44;;;2938:53;;;;;;;;3039:5;3005:39;;:20;:30;3026:8;3005:30;;;;;;;;;;;;;;;;;;;;;;;;;;;:39;;;2997:48;;;;;;;;3087:57;3108:11;3121:16;3139:4;3087:20;:57::i;:::-;3052:92;;3167:37;3202:1;3167:18;:30;3186:10;3167:30;;;;;;;;;;;;;;;;:34;;:37;;;;:::i;:::-;3151:53;;3259:12;3210:13;:46;3234:10;3246:8;3224:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3210:46;;;;;;;;;;;;;;;;;:61;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3310:8;3277:18;:30;3296:10;3277:30;;;;;;;;;;;;;;;:41;;;;3358:4;3325:20;:30;3346:8;3325:30;;;;;;;;;;;;;;;;;;:37;;;;;;;;;;;;;;;;;;3399:19;;3379:16;:39;;3369:49;;3440:10;3429:62;;;3452:11;3465:16;3483:7;3429:62;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;3429:62:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2629:867;;;;;;;;;;;:::o;1194:351:2:-;1392:12;1425:52;1432:11;1445:16;1463:4;1469:1;1472;1475;1425:6;:52::i;:::-;1415:62;;1487:7;1483:58;;;1514:20;1523:2;1527:6;1514:8;:20::i;:::-;1504:30;;1483:58;1194:351;;;;;;;;;;:::o;4073:237:0:-;653:5:4;;;;;;;;;;;639:19;;:10;:19;;;631:28;;;;;;;;4191:1:0;4175:12;:17;;4167:26;;;;;;;;4221:12;4199:19;:34;;;;4244:61;4271:19;;4292:12;4244:61;;;;;;;;;;;;;;;;;;;;;;;;4073:237;:::o;3618:403:8:-;3701:4;3713:13;3729:7;:19;3737:10;3729:19;;;;;;;;;;;;;;;:29;3749:8;3729:29;;;;;;;;;;;;;;;;3713:45;;3787:8;3768:16;:27;3764:164;;;3837:1;3805:7;:19;3813:10;3805:19;;;;;;;;;;;;;;;:29;3825:8;3805:29;;;;;;;;;;;;;;;:33;;;;3764:164;;;3891:30;3904:16;3891:8;:12;;:30;;;;:::i;:::-;3859:7;:19;3867:10;3859:19;;;;;;;;;;;;;;;:29;3879:8;3859:29;;;;;;;;;;;;;;;:62;;;;3764:164;3959:8;3938:61;;3947:10;3938:61;;;3969:7;:19;3977:10;3969:19;;;;;;;;;;;;;;;:29;3989:8;3969:29;;;;;;;;;;;;;;;;3938:61;;;;;;;;;;;;;;;;;;4012:4;4005:11;;3618:403;;;;;:::o;1122:107:5:-;1178:15;1208:8;:16;1217:6;1208:16;;;;;;;;;;;;;;;;1201:23;;1122:107;;;:::o;238:20:4:-;;;;;;;;;;;;;:::o;3056:53:1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1024:643:0:-;1178:12;1303:40;;:::i;:::-;1433:32;;:::i;:::-;1229:66;1249:11;1262:16;1280:4;1239:46;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;51:19;36:153;;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;1239:46:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1287:1;1290;1293;1229:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1209:86;;:16;;;;;;;;;;;:86;;;1201:95;;;;;;;;1346:13;:25;1360:10;1346:25;;;;;;;;;;;;;;;1303:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1420:5;1385:40;;:20;:31;;;:40;;;1377:49;;;;;;;;1468:33;1489:11;1468:20;:33::i;:::-;1433:68;;1536:12;1508:13;:25;1522:10;1508:25;;;;;;;;;;;;;;;:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1603:1;1564:13;:25;1578:10;1564:25;;;;;;;;;;;;;;;:35;;;:40;;1554:50;;1629:10;1616:46;;;1641:11;1654:7;1616:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1616:46:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1024:643;;;;;;;;;;:::o;599:321:5:-;662:4;697:1;682:17;;:3;:17;;;;674:26;;;;;;;;724:8;:20;733:10;724:20;;;;;;;;;;;;;;;;714:6;:30;;706:39;;;;;;;;775:32;800:6;775:8;:20;784:10;775:20;;;;;;;;;;;;;;;;:24;;:32;;;;:::i;:::-;752:8;:20;761:10;752:20;;;;;;;;;;;;;;;:55;;;;829:25;847:6;829:8;:13;838:3;829:13;;;;;;;;;;;;;;;;:17;;:25;;;;:::i;:::-;813:8;:13;822:3;813:13;;;;;;;;;;;;;;;:41;;;;886:3;865:33;;874:10;865:33;;;891:6;865:33;;;;;;;;;;;;;;;;;;911:4;904:11;;599:321;;;;:::o;3654:265:0:-;653:5:4;;;;;;;;;;;639:19;;:10;:19;;;631:28;;;;;;;;3794:1:0;3763:33;;:19;:33;;;;3755:42;;;;;;;;3822:19;3803:16;;:38;;;;;;;;;;;;;;;;;;3852:62;3876:16;;;;;;;;;;;3894:19;3852:62;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3654:265;:::o;2840:31:1:-;;;;;;;;;;;;;:::o;2894:262:8:-;2972:4;3016:46;3050:11;3016:7;:19;3024:10;3016:19;;;;;;;;;;;;;;;:29;3036:8;3016:29;;;;;;;;;;;;;;;;:33;;:46;;;;:::i;:::-;2984:7;:19;2992:10;2984:19;;;;;;;;;;;;;;;:29;3004:8;2984:29;;;;;;;;;;;;;;;:78;;;;3094:8;3073:61;;3082:10;3073:61;;;3104:7;:19;3112:10;3104:19;;;;;;;;;;;;;;;:29;3124:8;3104:29;;;;;;;;;;;;;;;;3073:61;;;;;;;;;;;;;;;;;;3147:4;3140:11;;2894:262;;;;:::o;3540:52:1:-;;;;;;;;;;;;;;;;;;;;;;:::o;2311:126:8:-;2385:7;2407;:15;2415:6;2407:15;;;;;;;;;;;;;;;:25;2423:8;2407:25;;;;;;;;;;;;;;;;2400:32;;2311:126;;;;:::o;832:174:4:-;653:5;;;;;;;;;;;639:19;;:10;:19;;;631:28;;;;;;;;928:1;908:22;;:8;:22;;;;900:31;;;;;;;;970:8;942:37;;963:5;;;;;;;;;;;942:37;;;;;;;;;;;;993:8;985:5;;:16;;;;;;;;;;;;;;;;;;832:174;:::o;842:110:3:-;900:7;927:1;922;:6;;915:14;;;;;;946:1;942;:5;935:12;;842:110;;;;:::o;1014:129::-;1072:7;1087:9;1103:1;1099;:5;1087:17;;1122:1;1117;:6;;1110:14;;;;;;1137:1;1130:8;;1014:129;;;;;:::o;5359:446:0:-;5493:25;;:::i;:::-;5555:11;5528:12;:24;;:38;;;;5604:16;5572:12;:29;;:48;;;;;5646:4;5626:12;:17;;:24;;;;;;;;;;;5681:19;;5656:12;:22;;:44;;;;;5731:15;5706:12;:22;;:40;;;;;5784:16;;;;;;;;;;;5752:12;:29;;:48;;;;;;;;;;;5359:446;;;;;:::o;4554:303::-;4643:25;;:::i;:::-;4703:15;4678:12;:22;;:40;;;;;4756:16;;;;;;;;;;;4724:12;:29;;:48;;;;;;;;;;;4805:11;4778:12;:24;;:38;;;;4848:4;4822:12;:23;;:30;;;;;;;;;;;4554:303;;;:::o;340:1207:2:-;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o",
  "source": "pragma solidity 0.4.21;\n\nimport \"../HumanIdentityBasic.sol\";\nimport \"../zeppelin/token/StandardToken.sol\";\n\n\n/**\n* @title HumanIdentityToken\n* @author Adam Gall (adam@decentcrypto.com)\n* @notice HumanIdentityToken is a generic \"token\" implementation of the \n* HumanIdentityBasic contract joined with OpenZeppelin's\n* ERC20 StandardToken\n*/\ncontract HumanIdentityToken is HumanIdentityBasic, StandardToken {\n\n  /**\n  * @notice Receive biometrically verified payload and signature \n  * from offchain oracle, along with `to` recipient, and \n  * number of tokens to transfer.\n  * @param oracleNonce Unique identifier from offchain oracle identity provider\n  * @param confidenceResult Confidence level returned by the identity provider\n  * @param user Public address of the user verifyting their transaction\n  * @param r Signature data\n  * @param s Signature data\n  * @param v Signature data\n  * @param to Address of token recipient\n  * @param amount Amount of tokens to send to `to`\n  * @return A boolean indicating whether the function was successful or not.\n  * The result will be false if either the `verify` OR `transfer` \n  * functions fail. Only returns true if token transfer occurs.\n  */\n  function verifyAndTransfer(\n    string oracleNonce,\n    uint confidenceResult,\n    address user,\n    bytes32 r,\n    bytes32 s,\n    uint8 v,\n    address to,\n    uint amount\n  ) \n  public \n  returns (bool success) \n  {\n    success = verify(oracleNonce, confidenceResult, user, r, s, v);\n    if (success) {\n      success = transfer(to, amount);\n    }\n  }\n}\n",
  "sourcePath": "/Users/train/Documents/Work/Decent/kairos/wallet/contracts/HumanIdentity/token/HumanIdentityToken.sol",
  "ast": {
    "absolutePath": "/Users/train/Documents/Work/Decent/kairos/wallet/contracts/HumanIdentity/token/HumanIdentityToken.sol",
    "exportedSymbols": {
      "HumanIdentityToken": [
        490
      ]
    },
    "id": 491,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 440,
        "literals": [
          "solidity",
          "0.4",
          ".21"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:2"
      },
      {
        "absolutePath": "/Users/train/Documents/Work/Decent/kairos/wallet/contracts/HumanIdentity/HumanIdentityBasic.sol",
        "file": "../HumanIdentityBasic.sol",
        "id": 441,
        "nodeType": "ImportDirective",
        "scope": 491,
        "sourceUnit": 330,
        "src": "25:35:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/train/Documents/Work/Decent/kairos/wallet/contracts/HumanIdentity/zeppelin/token/StandardToken.sol",
        "file": "../zeppelin/token/StandardToken.sol",
        "id": 442,
        "nodeType": "ImportDirective",
        "scope": 491,
        "sourceUnit": 1058,
        "src": "61:45:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": [],
            "baseName": {
              "contractScope": null,
              "id": 443,
              "name": "HumanIdentityBasic",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 329,
              "src": "371:18:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_HumanIdentityBasic_$329",
                "typeString": "contract HumanIdentityBasic"
              }
            },
            "id": 444,
            "nodeType": "InheritanceSpecifier",
            "src": "371:18:2"
          },
          {
            "arguments": [],
            "baseName": {
              "contractScope": null,
              "id": 445,
              "name": "StandardToken",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1057,
              "src": "391:13:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_StandardToken_$1057",
                "typeString": "contract StandardToken"
              }
            },
            "id": 446,
            "nodeType": "InheritanceSpecifier",
            "src": "391:13:2"
          }
        ],
        "contractDependencies": [
          329,
          438,
          640,
          736,
          779,
          811,
          1057
        ],
        "contractKind": "contract",
        "documentation": "@title HumanIdentityToken\n@author Adam Gall (adam@decentcrypto.com)\n@notice HumanIdentityToken is a generic \"token\" implementation of the \nHumanIdentityBasic contract joined with OpenZeppelin's\nERC20 StandardToken",
        "fullyImplemented": true,
        "id": 490,
        "linearizedBaseContracts": [
          490,
          1057,
          736,
          779,
          811,
          329,
          640,
          438
        ],
        "name": "HumanIdentityToken",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 488,
              "nodeType": "Block",
              "src": "1409:136:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 476,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 467,
                      "name": "success",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 465,
                      "src": "1415:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 469,
                          "name": "oracleNonce",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 448,
                          "src": "1432:11:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 470,
                          "name": "confidenceResult",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 450,
                          "src": "1445:16:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 471,
                          "name": "user",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 452,
                          "src": "1463:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 472,
                          "name": "r",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 454,
                          "src": "1469:1:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 473,
                          "name": "s",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 456,
                          "src": "1472:1:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 474,
                          "name": "v",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 458,
                          "src": "1475:1:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        ],
                        "id": 468,
                        "name": "verify",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          198
                        ],
                        "referencedDeclaration": 198,
                        "src": "1425:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_uint256_$_t_address_$_t_bytes32_$_t_bytes32_$_t_uint8_$returns$_t_bool_$",
                          "typeString": "function (string memory,uint256,address,bytes32,bytes32,uint8) returns (bool)"
                        }
                      },
                      "id": 475,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1425:52:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "1415:62:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 477,
                  "nodeType": "ExpressionStatement",
                  "src": "1415:62:2"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "id": 478,
                    "name": "success",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 465,
                    "src": "1487:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 487,
                  "nodeType": "IfStatement",
                  "src": "1483:58:2",
                  "trueBody": {
                    "id": 486,
                    "nodeType": "Block",
                    "src": "1496:45:2",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 484,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 479,
                            "name": "success",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 465,
                            "src": "1504:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 481,
                                "name": "to",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 460,
                                "src": "1523:2:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "argumentTypes": null,
                                "id": 482,
                                "name": "amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 462,
                                "src": "1527:6:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 480,
                              "name": "transfer",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                723
                              ],
                              "referencedDeclaration": 723,
                              "src": "1514:8:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                "typeString": "function (address,uint256) returns (bool)"
                              }
                            },
                            "id": 483,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1514:20:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "1504:30:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 485,
                        "nodeType": "ExpressionStatement",
                        "src": "1504:30:2"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": "@notice Receive biometrically verified payload and signature \nfrom offchain oracle, along with `to` recipient, and \nnumber of tokens to transfer.\n@param oracleNonce Unique identifier from offchain oracle identity provider\n@param confidenceResult Confidence level returned by the identity provider\n@param user Public address of the user verifyting their transaction\n@param r Signature data\n@param s Signature data\n@param v Signature data\n@param to Address of token recipient\n@param amount Amount of tokens to send to `to`\n@return A boolean indicating whether the function was successful or not.\nThe result will be false if either the `verify` OR `transfer` \nfunctions fail. Only returns true if token transfer occurs.",
            "id": 489,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "verifyAndTransfer",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 463,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 448,
                  "name": "oracleNonce",
                  "nodeType": "VariableDeclaration",
                  "scope": 489,
                  "src": "1226:18:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string memory"
                  },
                  "typeName": {
                    "id": 447,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1226:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string storage pointer"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 450,
                  "name": "confidenceResult",
                  "nodeType": "VariableDeclaration",
                  "scope": 489,
                  "src": "1250:21:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 449,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1250:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 452,
                  "name": "user",
                  "nodeType": "VariableDeclaration",
                  "scope": 489,
                  "src": "1277:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 451,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1277:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 454,
                  "name": "r",
                  "nodeType": "VariableDeclaration",
                  "scope": 489,
                  "src": "1295:9:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 453,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1295:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 456,
                  "name": "s",
                  "nodeType": "VariableDeclaration",
                  "scope": 489,
                  "src": "1310:9:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 455,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1310:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 458,
                  "name": "v",
                  "nodeType": "VariableDeclaration",
                  "scope": 489,
                  "src": "1325:7:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 457,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "1325:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 460,
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 489,
                  "src": "1338:10:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 459,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1338:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 462,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 489,
                  "src": "1354:11:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 461,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1354:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1220:149:2"
            },
            "payable": false,
            "returnParameters": {
              "id": 466,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 465,
                  "name": "success",
                  "nodeType": "VariableDeclaration",
                  "scope": 489,
                  "src": "1392:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 464,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1392:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1391:14:2"
            },
            "scope": 490,
            "src": "1194:351:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 491,
        "src": "340:1207:2"
      }
    ],
    "src": "0:1548:2"
  },
  "legacyAST": {
    "absolutePath": "/Users/train/Documents/Work/Decent/kairos/wallet/contracts/HumanIdentity/token/HumanIdentityToken.sol",
    "exportedSymbols": {
      "HumanIdentityToken": [
        490
      ]
    },
    "id": 491,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 440,
        "literals": [
          "solidity",
          "0.4",
          ".21"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:2"
      },
      {
        "absolutePath": "/Users/train/Documents/Work/Decent/kairos/wallet/contracts/HumanIdentity/HumanIdentityBasic.sol",
        "file": "../HumanIdentityBasic.sol",
        "id": 441,
        "nodeType": "ImportDirective",
        "scope": 491,
        "sourceUnit": 330,
        "src": "25:35:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/train/Documents/Work/Decent/kairos/wallet/contracts/HumanIdentity/zeppelin/token/StandardToken.sol",
        "file": "../zeppelin/token/StandardToken.sol",
        "id": 442,
        "nodeType": "ImportDirective",
        "scope": 491,
        "sourceUnit": 1058,
        "src": "61:45:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": [],
            "baseName": {
              "contractScope": null,
              "id": 443,
              "name": "HumanIdentityBasic",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 329,
              "src": "371:18:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_HumanIdentityBasic_$329",
                "typeString": "contract HumanIdentityBasic"
              }
            },
            "id": 444,
            "nodeType": "InheritanceSpecifier",
            "src": "371:18:2"
          },
          {
            "arguments": [],
            "baseName": {
              "contractScope": null,
              "id": 445,
              "name": "StandardToken",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1057,
              "src": "391:13:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_StandardToken_$1057",
                "typeString": "contract StandardToken"
              }
            },
            "id": 446,
            "nodeType": "InheritanceSpecifier",
            "src": "391:13:2"
          }
        ],
        "contractDependencies": [
          329,
          438,
          640,
          736,
          779,
          811,
          1057
        ],
        "contractKind": "contract",
        "documentation": "@title HumanIdentityToken\n@author Adam Gall (adam@decentcrypto.com)\n@notice HumanIdentityToken is a generic \"token\" implementation of the \nHumanIdentityBasic contract joined with OpenZeppelin's\nERC20 StandardToken",
        "fullyImplemented": true,
        "id": 490,
        "linearizedBaseContracts": [
          490,
          1057,
          736,
          779,
          811,
          329,
          640,
          438
        ],
        "name": "HumanIdentityToken",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 488,
              "nodeType": "Block",
              "src": "1409:136:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 476,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 467,
                      "name": "success",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 465,
                      "src": "1415:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 469,
                          "name": "oracleNonce",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 448,
                          "src": "1432:11:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 470,
                          "name": "confidenceResult",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 450,
                          "src": "1445:16:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 471,
                          "name": "user",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 452,
                          "src": "1463:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 472,
                          "name": "r",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 454,
                          "src": "1469:1:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 473,
                          "name": "s",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 456,
                          "src": "1472:1:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 474,
                          "name": "v",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 458,
                          "src": "1475:1:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        ],
                        "id": 468,
                        "name": "verify",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          198
                        ],
                        "referencedDeclaration": 198,
                        "src": "1425:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_uint256_$_t_address_$_t_bytes32_$_t_bytes32_$_t_uint8_$returns$_t_bool_$",
                          "typeString": "function (string memory,uint256,address,bytes32,bytes32,uint8) returns (bool)"
                        }
                      },
                      "id": 475,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1425:52:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "1415:62:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 477,
                  "nodeType": "ExpressionStatement",
                  "src": "1415:62:2"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "id": 478,
                    "name": "success",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 465,
                    "src": "1487:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 487,
                  "nodeType": "IfStatement",
                  "src": "1483:58:2",
                  "trueBody": {
                    "id": 486,
                    "nodeType": "Block",
                    "src": "1496:45:2",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 484,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 479,
                            "name": "success",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 465,
                            "src": "1504:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 481,
                                "name": "to",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 460,
                                "src": "1523:2:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "argumentTypes": null,
                                "id": 482,
                                "name": "amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 462,
                                "src": "1527:6:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 480,
                              "name": "transfer",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                723
                              ],
                              "referencedDeclaration": 723,
                              "src": "1514:8:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                "typeString": "function (address,uint256) returns (bool)"
                              }
                            },
                            "id": 483,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1514:20:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "1504:30:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 485,
                        "nodeType": "ExpressionStatement",
                        "src": "1504:30:2"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": "@notice Receive biometrically verified payload and signature \nfrom offchain oracle, along with `to` recipient, and \nnumber of tokens to transfer.\n@param oracleNonce Unique identifier from offchain oracle identity provider\n@param confidenceResult Confidence level returned by the identity provider\n@param user Public address of the user verifyting their transaction\n@param r Signature data\n@param s Signature data\n@param v Signature data\n@param to Address of token recipient\n@param amount Amount of tokens to send to `to`\n@return A boolean indicating whether the function was successful or not.\nThe result will be false if either the `verify` OR `transfer` \nfunctions fail. Only returns true if token transfer occurs.",
            "id": 489,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "verifyAndTransfer",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 463,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 448,
                  "name": "oracleNonce",
                  "nodeType": "VariableDeclaration",
                  "scope": 489,
                  "src": "1226:18:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string memory"
                  },
                  "typeName": {
                    "id": 447,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1226:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string storage pointer"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 450,
                  "name": "confidenceResult",
                  "nodeType": "VariableDeclaration",
                  "scope": 489,
                  "src": "1250:21:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 449,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1250:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 452,
                  "name": "user",
                  "nodeType": "VariableDeclaration",
                  "scope": 489,
                  "src": "1277:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 451,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1277:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 454,
                  "name": "r",
                  "nodeType": "VariableDeclaration",
                  "scope": 489,
                  "src": "1295:9:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 453,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1295:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 456,
                  "name": "s",
                  "nodeType": "VariableDeclaration",
                  "scope": 489,
                  "src": "1310:9:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 455,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1310:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 458,
                  "name": "v",
                  "nodeType": "VariableDeclaration",
                  "scope": 489,
                  "src": "1325:7:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 457,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "1325:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 460,
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 489,
                  "src": "1338:10:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 459,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1338:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 462,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 489,
                  "src": "1354:11:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 461,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1354:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1220:149:2"
            },
            "payable": false,
            "returnParameters": {
              "id": 466,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 465,
                  "name": "success",
                  "nodeType": "VariableDeclaration",
                  "scope": 489,
                  "src": "1392:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 464,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1392:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1391:14:2"
            },
            "scope": 490,
            "src": "1194:351:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 491,
        "src": "340:1207:2"
      }
    ],
    "src": "0:1548:2"
  },
  "compiler": {
    "name": "solc",
    "version": "0.4.21+commit.dfe3193c.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "2.0.0",
  "updatedAt": "2018-04-28T20:35:34.304Z"
}